{"version":3,"file":"static/js/566.0d1dffd1.chunk.js","mappings":"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","sources":["API.js","pages/MovieDetails.styled.js","pages/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'e3a0c6c42d69ea58a91a9b6b24735154';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n  if (response.status === 404) {\n    throw new Error('Something went wrong, please try again', response.status);\n  }\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  if (response.status === 404) {\n    throw new Error('Something went wrong, please try again', response.status);\n  }\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  if (response.status === 404) {\n    throw new Error('Something went wrong, please try again', response.status);\n  }\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  if (response.status === 404) {\n    throw new Error('Something went wrong, please try again', response.status);\n  }\n  return response.data;\n};\n\nexport const SearchMovies = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${KEY}`\n  );\n  if (response.status === 404) {\n    throw new Error('Something went wrong, please try again', response.status);\n  }\n  return response.data;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieInfoWrap = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const BackLink = styled(Link)`\n  display: block;\n  margin: 10px 0;\n`;\n","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport * as API from '../API';\nimport { Loader } from 'components/Loader';\nimport { BackLink, MovieInfoWrap } from './MovieDetails.styled';\n\nexport const ERROR_MSG = 'Something went wrong, please try again';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  // console.log(location);\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [movieDetails, setmovieDetails] = useState([]);\n  const [movieGenres, setMovieGenres] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  const releaseDate = new Date(movieDetails.release_date);\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        setLoading(true);\n        setError(null);\n        const movieDetails = await API.getMovieDetails(movieId);\n\n        setmovieDetails(movieDetails);\n        setMovieGenres(movieDetails.genres);\n      } catch (error) {\n        setError(ERROR_MSG);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      <BackLink to={backLinkLocationRef.current}>Go back</BackLink>\n\n      {error && <h1>{error} </h1>}\n      {loading && <Loader />}\n      <MovieInfoWrap>\n        {movieDetails.poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w300${movieDetails.poster_path}`}\n            alt={movieDetails.title}\n          ></img>\n        ) : (\n          <img\n            src={`https://via.placeholder.com/300x400?text=No+Image`}\n            alt={movieDetails.title}\n          ></img>\n        )}\n        <div>\n          <h2>\n            {movieDetails.title || movieDetails.name} ({releaseYear})\n          </h2>\n          <p>User Score: {Math.round(movieDetails.vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{movieDetails.overview}</p>\n          <h3>Genres</h3>\n          <p>\n            {movieGenres.map(genre => (\n              <span key={genre.id}> {genre.name}</span>\n            ))}\n          </p>\n        </div>\n      </MovieInfoWrap>\n\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","getTrendingMovies","axios","response","status","Error","data","getMovieDetails","movieId","getMovieCredits","getMovieReviews","SearchMovies","query","MovieInfoWrap","styled","BackLink","Link","ERROR_MSG","location","useLocation","backLinkLocationRef","useRef","state","from","useState","movieDetails","setmovieDetails","movieGenres","setMovieGenres","loading","setLoading","error","setError","useParams","releaseDate","Date","release_date","releaseYear","isNaN","getFullYear","useEffect","API","genres","to","current","Loader","poster_path","src","alt","title","name","Math","round","vote_average","overview","map","genre","id","Suspense","fallback"],"sourceRoot":""}